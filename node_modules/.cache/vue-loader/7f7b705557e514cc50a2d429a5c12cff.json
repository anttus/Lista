{"remainingRequest":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anttu/Documents/Git/NodeNote/new_ui/src/components/Lists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/src/components/Lists.vue","mtime":1549009050851},{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/new_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DeleteDialog from \"./dialogs/DeleteDialog\";\nimport ShareDialog from \"./dialogs/ShareDialog\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst db = require(\"../../api-server/db/dbController\");\n\nexport default {\n  name: \"Lists\",\n  template: '#lists',\n  data() {\n    return {\n      curUser: firebase.auth().currentUser,\n      userLists: [],\n      selectedList: null\n    };\n  },\n  components: {\n    DeleteDialog,\n    ShareDialog\n  },\n  methods: {\n    openDeleteDialog(list) {\n      this.$root.$delete\n        .open(\n          \"Listan poisto\",\n          'Haluatko varmasti poistaa listan \"' + list.Name + '\"?',\n          {\n            color: \"gray\"\n          }\n        )\n        .then(value => {\n          if (value) {\n            db.deleteList(list.List_id).then(res => {\n              this.getUserLists();\n            });\n          }\n        });\n    },\n    openShareDialog() {\n      this.$root.$share\n        .open(\"Listan jakaminen\", \"Kenen kanssa haluat jakaa listan?\", {\n          color: \"gray\"\n        })\n        .then(value => {\n          console.log(value);\n        });\n    },\n    openList() {\n      // console.log(\"Opening list...\"); // Functionality for opening the list\n    },\n    getUserLists() {\n      db.getListsOfUser(this.curUser.uid).then(res => {\n        this.userLists = res.data;\n      });\n    },\n    mounted() {\n      this.getUserLists();\n      this.$root.$delete = this.$refs.delete;\n      this.$root.$share = this.$refs.share;\n    }\n  }\n};\n",{"version":3,"sources":["Lists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lists.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"lists\">\n    <DeleteDialog ref=\"delete\"/>\n    <ShareDialog ref=\"share\"/>\n    <div v-bind:key=\"list.id\" v-for=\"list in userLists\">\n      <div v-bind:selectedList=\"list\" class=\"listElement\" href=\"#\">\n        <span class=\"iconBtn\" @click=\"openShareDialog\">\n          <font-awesome-icon icon=\"share\"/>\n        </span>\n        <span class=\"listName\" @click=\"openList\">{{list.Name}}</span>\n        <span v-bind:list=\"list\" class=\"iconBtn\" @click=\"openDeleteDialog(list)\">\n          <font-awesome-icon icon=\"trash\"/>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport DeleteDialog from \"./dialogs/DeleteDialog\";\nimport ShareDialog from \"./dialogs/ShareDialog\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst db = require(\"../../api-server/db/dbController\");\n\nexport default {\n  name: \"Lists\",\n  template: '#lists',\n  data() {\n    return {\n      curUser: firebase.auth().currentUser,\n      userLists: [],\n      selectedList: null\n    };\n  },\n  components: {\n    DeleteDialog,\n    ShareDialog\n  },\n  methods: {\n    openDeleteDialog(list) {\n      this.$root.$delete\n        .open(\n          \"Listan poisto\",\n          'Haluatko varmasti poistaa listan \"' + list.Name + '\"?',\n          {\n            color: \"gray\"\n          }\n        )\n        .then(value => {\n          if (value) {\n            db.deleteList(list.List_id).then(res => {\n              this.getUserLists();\n            });\n          }\n        });\n    },\n    openShareDialog() {\n      this.$root.$share\n        .open(\"Listan jakaminen\", \"Kenen kanssa haluat jakaa listan?\", {\n          color: \"gray\"\n        })\n        .then(value => {\n          console.log(value);\n        });\n    },\n    openList() {\n      // console.log(\"Opening list...\"); // Functionality for opening the list\n    },\n    getUserLists() {\n      db.getListsOfUser(this.curUser.uid).then(res => {\n        this.userLists = res.data;\n      });\n    },\n    mounted() {\n      this.getUserLists();\n      this.$root.$delete = this.$refs.delete;\n      this.$root.$share = this.$refs.share;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.iconBtn {\n  padding: 15px;\n}\n.shareBtn:hover {\n  color: rgb(63, 173, 91);\n  transition: 0.5s;\n}\n.deleteBtn:hover {\n  color: rgb(187, 67, 63);\n  transition: 0.5s;\n}\n.listName:hover {\n  color: rgb(240, 202, 77);\n  transition: 0.5s;\n}\n.listElement {\n  padding: 0;\n  padding-left: 0;\n  align-content: left;\n  margin: 0;\n  color: #f4f4f4;\n}\n</style>\n"]}]}