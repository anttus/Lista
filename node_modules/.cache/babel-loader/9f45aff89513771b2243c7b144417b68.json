{"remainingRequest":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/babel-loader/lib/index.js!/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/vuetify-loader/lib/loader.js!/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anttu/Documents/Git/Vue_NodeNote/src/components/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/src/components/SideBar.vue","mtime":1549449976653},{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/Vue_NodeNote/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Slide from \"./SideMenu/slide\";\nimport DeleteDialog from \"./dialogs/DeleteDialog\";\nimport ShareDialog from \"./dialogs/ShareDialog\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nvar db = require(\"../../api-server/db/dbController\");\n\nexport default {\n  data: function data() {\n    return {\n      curUser: firebase.auth().currentUser,\n      userLists: [],\n      currentList: null,\n      // Localstorage system?\n      items: [],\n      listIdToShare: null\n    };\n  },\n  components: {\n    Slide: Slide,\n    DeleteDialog: DeleteDialog,\n    ShareDialog: ShareDialog\n  },\n  methods: {\n    openDeleteDialog: function openDeleteDialog(list) {\n      var _this = this;\n\n      this.$root.$delete.open(\"List removal\", 'Are you sure you want to delete the list \"' + list.Name + '\"?', {\n        color: \"gray\"\n      }).then(function (value) {\n        if (value) {\n          db.deleteList(list.List_id).then(function () {\n            _this.getUserLists();\n          });\n        }\n      });\n    },\n    openShareDialog: function openShareDialog(list) {\n      this.listIdToShare = list.List_id;\n      this.$root.$share.open(\"List sharing\", 'Who do you want to share the list \"' + list.Name + '\" with?', {\n        color: \"gray\"\n      });\n    },\n    openList: function openList(list) {\n      this.currentList = list;\n      this.loadItems(this.currentList.List_id);\n    },\n    signOut: function signOut() {\n      var _this2 = this;\n\n      firebase.auth().signOut().then(function () {\n        _this2.$router.replace(\"login\");\n      });\n    },\n    getUserLists: function getUserLists() {\n      var _this3 = this;\n\n      db.getListsOfUser(this.curUser.uid).then(function (res) {\n        _this3.userLists = res.data;\n\n        if (_this3.userLists.length != 0) {\n          _this3.currentList = _this3.userLists[0]; // From localstorage?\n\n          _this3.loadItems(_this3.currentList.List_id);\n        }\n      });\n    },\n    // Used from Header, that gets the list name from AddListDialog\n    addList: function addList(listName) {\n      var _this4 = this;\n\n      db.addList(this.curUser.uid, listName).then(function () {\n        _this4.getUserLists();\n      });\n    },\n    addItem: function addItem(newItem) {\n      var _this5 = this;\n\n      if (this.currentList.List_id) {\n        db.addItem(this.currentList.List_id, newItem.Name).then(function () {\n          _this5.loadItems(_this5.currentList.List_id);\n        });\n      }\n    },\n    loadItems: function loadItems(listId) {\n      var _this6 = this;\n\n      db.getItems(listId).then(function (value) {\n        _this6.items.push(value.data);\n      }).then(function () {\n        _this6.$emit(\"cur-list\", _this6.currentList);\n\n        _this6.$emit(\"items-list\", _this6.items[0]);\n\n        _this6.items = [];\n      });\n    },\n    deleteItem: function deleteItem(listId, itemId, itemName) {\n      if (listId && itemId && itemName) db.deleteItem(listId, itemId, itemName);\n    },\n    shareList: function shareList(email) {\n      var _this7 = this;\n\n      if (this.$refs.share.alertEmail(email)) {\n        db.checkUserExists(email).then(function (result) {\n          result = result.data[0][\"COUNT(*)\"];\n\n          if (result === 1) {\n            db.shareList(email, _this7.listIdToShare);\n\n            _this7.$refs.share.resolve(true);\n\n            _this7.$refs.share.dialog = false;\n          } else _this7.$refs.share.alertShare(email);\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getUserLists();\n    this.$root.$delete = this.$refs.delete;\n    this.$root.$share = this.$refs.share;\n  }\n};",{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <DeleteDialog ref=\"delete\"/>\n    <ShareDialog ref=\"share\" v-on:agree-share=\"shareList\"/>\n    <Slide right>\n      <div class=\"loggedInUser\">{{curUser.email}}</div>\n      <div v-bind:key=\"list.id\" v-for=\"list in userLists\">\n        <div class=\"listElement\" href=\"#\">\n          <span class=\"iconBtn shareBtn\" @click=\"openShareDialog(list)\">\n            <font-awesome-icon icon=\"share\"/>\n          </span>\n          <span class=\"listName\" @click=\"openList(list)\">{{list.Name}}</span>\n          <span v-bind:list=\"list\" class=\"iconBtn deleteBtn\" @click=\"openDeleteDialog(list)\">\n            <font-awesome-icon icon=\"trash\"/>\n          </span>\n        </div>\n      </div>\n      <button @click=\"signOut\" class=\"signOutBtn\">\n        <font-awesome-icon icon=\"sign-out-alt\"/>Sign out\n      </button>\n    </Slide>\n  </div>\n</template>\n\n<script>\nimport Slide from \"./SideMenu/slide\";\nimport DeleteDialog from \"./dialogs/DeleteDialog\";\nimport ShareDialog from \"./dialogs/ShareDialog\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst db = require(\"../../api-server/db/dbController\");\n\nexport default {\n  data() {\n    return {\n      curUser: firebase.auth().currentUser,\n      userLists: [],\n      currentList: null, // Localstorage system?\n      items: [],\n      listIdToShare: null\n    };\n  },\n  components: {\n    Slide,\n    DeleteDialog,\n    ShareDialog\n  },\n  methods: {\n    openDeleteDialog(list) {\n      this.$root.$delete\n        .open(\n          \"List removal\",\n          'Are you sure you want to delete the list \"' + list.Name + '\"?',\n          {\n            color: \"gray\"\n          }\n        )\n        .then(value => {\n          if (value) {\n            db.deleteList(list.List_id).then(() => {\n              this.getUserLists();\n            });\n          }\n        });\n    },\n    openShareDialog(list) {\n      this.listIdToShare = list.List_id;\n      this.$root.$share.open(\n        \"List sharing\",\n        'Who do you want to share the list \"' + list.Name + '\" with?',\n        {\n          color: \"gray\"\n        }\n      );\n    },\n    openList(list) {\n      this.currentList = list;\n      this.loadItems(this.currentList.List_id);\n    },\n    signOut() {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          this.$router.replace(\"login\");\n        });\n    },\n    getUserLists() {\n      db.getListsOfUser(this.curUser.uid).then(res => {\n        this.userLists = res.data;\n        if (this.userLists.length != 0) {\n          this.currentList = this.userLists[0]; // From localstorage?\n          this.loadItems(this.currentList.List_id);\n        }\n      });\n    },\n    // Used from Header, that gets the list name from AddListDialog\n    addList(listName) {\n      db.addList(this.curUser.uid, listName).then(() => {\n        this.getUserLists();\n      });\n    },\n    addItem(newItem) {\n      if (this.currentList.List_id) {\n        db.addItem(this.currentList.List_id, newItem.Name).then(() => {\n          this.loadItems(this.currentList.List_id);\n        });\n      }\n    },\n    loadItems(listId) {\n      db.getItems(listId)\n        .then(value => {\n          this.items.push(value.data);\n        })\n        .then(() => {\n          this.$emit(\"cur-list\", this.currentList);\n          this.$emit(\"items-list\", this.items[0]);\n          this.items = [];\n        });\n    },\n    deleteItem(listId, itemId, itemName) {\n      if (listId && itemId && itemName) db.deleteItem(listId, itemId, itemName);\n    },\n    shareList(email) {\n      if (this.$refs.share.alertEmail(email)) {\n        db.checkUserExists(email).then(result => {\n          result = result.data[0][\"COUNT(*)\"];\n          if (result === 1) {\n            db.shareList(email, this.listIdToShare);\n            this.$refs.share.resolve(true);\n            this.$refs.share.dialog = false;\n          } else this.$refs.share.alertShare(email);\n        });\n      }\n    }\n  },\n  mounted() {\n    this.getUserLists();\n    this.$root.$delete = this.$refs.delete;\n    this.$root.$share = this.$refs.share;\n  }\n};\n</script>\n\n<style scoped>\n.iconBtn {\n  padding: 15px;\n}\n.shareBtn:hover {\n  color: rgb(63, 173, 91);\n  transition: 0.5s;\n}\n.deleteBtn:hover {\n  color: rgb(187, 67, 63);\n  transition: 0.5s;\n}\n.listName:hover {\n  color: rgb(240, 202, 77);\n  transition: 0.5s;\n}\n.activeList:active {\n  color: rgb(240, 202, 77);\n}\n.listElement {\n  padding: 0;\n  padding-left: 0;\n  align-content: left;\n  margin: 0;\n  color: #f4f4f4;\n}\n.signOutBtn {\n  color: #f4f4f4;\n  font-weight: bold;\n  position: fixed;\n  bottom: 0px;\n  text-align: left !important;\n  background-color: #ff6961;\n  width: 300px;\n  display: block;\n  padding-left: 30px;\n}\n.signOutBtn:hover {\n  opacity: 0.8;\n  transition: 0.5s;\n}\n.loggedInUser {\n  padding: 0;\n  padding-left: 30px;\n  margin-bottom: 10px;\n  color: #f4f4f4b2;\n  font-size: 16px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}