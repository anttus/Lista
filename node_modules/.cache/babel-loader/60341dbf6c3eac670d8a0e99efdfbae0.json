{"remainingRequest":"/Users/anttu/Documents/Git/NodeNote/node_modules/babel-loader/lib/index.js!/Users/anttu/Documents/Git/NodeNote/node_modules/eslint-loader/index.js??ref--13-0!/Users/anttu/Documents/Git/NodeNote/api-server/db/dbController.js","dependencies":[{"path":"/Users/anttu/Documents/Git/NodeNote/api-server/db/dbController.js","mtime":1549436219909},{"path":"/Users/anttu/Documents/Git/NodeNote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/anttu/Documents/Git/NodeNote/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/anttu/Documents/Git/NodeNote/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar urlStart = \"http://localhost:8081/\";\nimport axios from \"axios\"; // const AUTH_TOKEN = 'Authorization: Basic cmVzdC5hcGk6c3VwZXJzZWNyZXQxMjM=';\n// axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n// const BASIC_AUTH = 'Basic ' + btoa('rest.api' + ':' + 'supersecret123');\n\nfunction getFromUrl(_x) {\n  return _getFromUrl.apply(this, arguments);\n} // FUTURE DEVELOPMENT\n// export async function editListName(listId, newName) {\n//   let url = urlStart + \"api/lists?listId=\" + listId + \"&newName=\" + newName;\n//   axios.patch(url).catch(err => {\n//     throw err;\n//   });\n// }\n// export async function getUser() {\n//   let url = urlStart + \"api/users\";\n//   return getFromUrl(url);\n// }\n// export async function deleteUser(userId) {\n//   let url = urlStart + \"api/users?userId=\" + userId;\n//   axios.delete(url).catch(err => {\n//     throw err;\n//   });\n// }\n// export async function editItemName(itemId, newName) {\n//   let url = urlStart + \"api/items?itemId=\" + itemId + \"&newName=\" + newName;\n//   return axios.patch(url).catch(err => {\n//     throw err;\n//   });\n// }\n// USERS\n\n\nfunction _getFromUrl() {\n  _getFromUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(url) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(url, {\n              validateStatus: function validateStatus(status) {\n                return status < 500; // Reject only if the status code is greater than or equal to 500\n              } // auth: {\n              //     username: 'rest.api',\n              //     password: 'supersecret123'\n              // }\n\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 7]]);\n  }));\n  return _getFromUrl.apply(this, arguments);\n}\n\nexport function addUser(_x2, _x3) {\n  return _addUser.apply(this, arguments);\n}\n\nfunction _addUser() {\n  _addUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(userId, email) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = urlStart + \"api/users?userId=\" + userId + \"&email=\" + email;\n            return _context2.abrupt(\"return\", axios.put(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _addUser.apply(this, arguments);\n}\n\nexport function checkUserExists(_x4) {\n  return _checkUserExists.apply(this, arguments);\n} // LISTS\n\nfunction _checkUserExists() {\n  _checkUserExists = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(email) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = urlStart + \"api/users/ifexists?email=\" + email;\n            return _context3.abrupt(\"return\", getFromUrl(url));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _checkUserExists.apply(this, arguments);\n}\n\nexport function getListsOfUser(_x5) {\n  return _getListsOfUser.apply(this, arguments);\n}\n\nfunction _getListsOfUser() {\n  _getListsOfUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(userId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            url = urlStart + \"api/lists?userId=\" + userId;\n            return _context4.abrupt(\"return\", getFromUrl(url));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n  return _getListsOfUser.apply(this, arguments);\n}\n\nexport function getSharedToUsers(_x6) {\n  return _getSharedToUsers.apply(this, arguments);\n}\n\nfunction _getSharedToUsers() {\n  _getSharedToUsers = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(listId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            url = urlStart + \"api/lists/users/shared?listId=\" + listId;\n            return _context5.abrupt(\"return\", getFromUrl(url));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n  return _getSharedToUsers.apply(this, arguments);\n}\n\nexport function shareList(_x7, _x8) {\n  return _shareList.apply(this, arguments);\n}\n\nfunction _shareList() {\n  _shareList = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(email, listId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            url = urlStart + \"api/lists/users/shared?email=\" + email + \"&listId=\" + listId;\n            return _context6.abrupt(\"return\", axios.put(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, this);\n  }));\n  return _shareList.apply(this, arguments);\n}\n\nexport function addList(_x9, _x10) {\n  return _addList.apply(this, arguments);\n}\n\nfunction _addList() {\n  _addList = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(userId, listName) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            url = urlStart + \"api/lists?userId=\" + userId + \"&listName=\" + listName;\n            return _context7.abrupt(\"return\", axios.put(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, this);\n  }));\n  return _addList.apply(this, arguments);\n}\n\nexport function addReferenceToUserLists(_x11, _x12) {\n  return _addReferenceToUserLists.apply(this, arguments);\n}\n\nfunction _addReferenceToUserLists() {\n  _addReferenceToUserLists = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(email, listId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            url = urlStart + \"api/lists/users?email=\" + email + \"&listId=\" + listId;\n            axios.put(url).catch(function (err) {\n              throw err;\n            });\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, this);\n  }));\n  return _addReferenceToUserLists.apply(this, arguments);\n}\n\nexport function deleteList(_x13) {\n  return _deleteList.apply(this, arguments);\n} // ITEMS\n\nfunction _deleteList() {\n  _deleteList = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(listId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            url = urlStart + \"api/lists/\" + listId;\n            return _context9.abrupt(\"return\", axios.delete(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, this);\n  }));\n  return _deleteList.apply(this, arguments);\n}\n\nexport function getItems(_x14) {\n  return _getItems.apply(this, arguments);\n}\n\nfunction _getItems() {\n  _getItems = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10(listId) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            url = urlStart + \"api/items?listId=\" + listId;\n            return _context10.abrupt(\"return\", getFromUrl(url));\n\n          case 2:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, this);\n  }));\n  return _getItems.apply(this, arguments);\n}\n\nexport function addItem(_x15, _x16) {\n  return _addItem.apply(this, arguments);\n}\n\nfunction _addItem() {\n  _addItem = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11(listId, itemName) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            url = urlStart + \"api/items?name=\" + itemName + \"&listId=\" + listId;\n            return _context11.abrupt(\"return\", axios.put(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, this);\n  }));\n  return _addItem.apply(this, arguments);\n}\n\nexport function deleteItem(_x17, _x18, _x19) {\n  return _deleteItem.apply(this, arguments);\n}\n\nfunction _deleteItem() {\n  _deleteItem = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12(listId, itemId, itemName) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            url = urlStart + \"api/items?listId=\" + listId + \"&itemId=\" + itemId + \"&itemName=\" + itemName;\n            axios.delete(url).catch(function (err) {\n              throw err;\n            });\n\n          case 2:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, this);\n  }));\n  return _deleteItem.apply(this, arguments);\n}\n\nexport function setItemStatus(_x20, _x21) {\n  return _setItemStatus.apply(this, arguments);\n}\n\nfunction _setItemStatus() {\n  _setItemStatus = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee13(itemId, completed) {\n    var url;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            url = urlStart + \"api/items/status?itemId=\" + itemId + \"&completed=\" + completed;\n            return _context13.abrupt(\"return\", axios.patch(url).catch(function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, this);\n  }));\n  return _setItemStatus.apply(this, arguments);\n}",{"version":3,"sources":["/Users/anttu/Documents/Git/NodeNote/api-server/db/dbController.js"],"names":["urlStart","axios","getFromUrl","url","get","validateStatus","status","response","addUser","userId","email","put","catch","err","checkUserExists","getListsOfUser","getSharedToUsers","listId","shareList","addList","listName","addReferenceToUserLists","deleteList","delete","getItems","addItem","itemName","deleteItem","itemId","setItemStatus","completed","patch"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst urlStart = \"http://localhost:8081/\";\nimport axios from \"axios\";\n\n// const AUTH_TOKEN = 'Authorization: Basic cmVzdC5hcGk6c3VwZXJzZWNyZXQxMjM=';\n// axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n// const BASIC_AUTH = 'Basic ' + btoa('rest.api' + ':' + 'supersecret123');\n\nasync function getFromUrl(url) {\n  try {\n    const response = await axios.get(url, {\n      validateStatus: function(status) {\n        return status < 500; // Reject only if the status code is greater than or equal to 500\n      }\n      // auth: {\n      //     username: 'rest.api',\n      //     password: 'supersecret123'\n      // }\n    });\n    return response;\n  } catch (err) {\n    throw err;\n  }\n}\n\n// FUTURE DEVELOPMENT\n\n// export async function editListName(listId, newName) {\n//   let url = urlStart + \"api/lists?listId=\" + listId + \"&newName=\" + newName;\n//   axios.patch(url).catch(err => {\n//     throw err;\n//   });\n// }\n\n// export async function getUser() {\n//   let url = urlStart + \"api/users\";\n//   return getFromUrl(url);\n// }\n\n// export async function deleteUser(userId) {\n//   let url = urlStart + \"api/users?userId=\" + userId;\n//   axios.delete(url).catch(err => {\n//     throw err;\n//   });\n// }\n\n// export async function editItemName(itemId, newName) {\n//   let url = urlStart + \"api/items?itemId=\" + itemId + \"&newName=\" + newName;\n//   return axios.patch(url).catch(err => {\n//     throw err;\n//   });\n// }\n\n// USERS\nexport async function addUser(userId, email) {\n  let url = urlStart + \"api/users?userId=\" + userId + \"&email=\" + email;\n  return axios.put(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function checkUserExists(email) {\n  let url = urlStart + \"api/users/ifexists?email=\" + email;\n  return getFromUrl(url);\n}\n\n// LISTS\nexport async function getListsOfUser(userId) {\n  let url = urlStart + \"api/lists?userId=\" + userId;\n  return getFromUrl(url);\n}\n\nexport async function getSharedToUsers(listId) {\n  let url = urlStart + \"api/lists/users/shared?listId=\" + listId;\n  return getFromUrl(url);\n}\n\nexport async function shareList(email, listId) {\n  let url =\n    urlStart + \"api/lists/users/shared?email=\" + email + \"&listId=\" + listId;\n  return axios.put(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function addList(userId, listName) {\n  let url = urlStart + \"api/lists?userId=\" + userId + \"&listName=\" + listName;\n  return axios.put(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function addReferenceToUserLists(email, listId) {\n  let url = urlStart + \"api/lists/users?email=\" + email + \"&listId=\" + listId;\n  axios.put(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function deleteList(listId) {\n  let url = urlStart + \"api/lists/\" + listId;\n  return axios.delete(url).catch(err => {\n    throw err;\n  });\n}\n\n// ITEMS\nexport async function getItems(listId) {\n  let url = urlStart + \"api/items?listId=\" + listId;\n  return getFromUrl(url);\n}\n\nexport async function addItem(listId, itemName) {\n  let url = urlStart + \"api/items?name=\" + itemName + \"&listId=\" + listId;\n  return axios.put(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function deleteItem(listId, itemId, itemName) {\n  let url =\n    urlStart +\n    \"api/items?listId=\" +\n    listId +\n    \"&itemId=\" +\n    itemId +\n    \"&itemName=\" +\n    itemName;\n  axios.delete(url).catch(err => {\n    throw err;\n  });\n}\n\nexport async function setItemStatus(itemId, completed) {\n  let url =\n    urlStart + \"api/items/status?itemId=\" + itemId + \"&completed=\" + completed;\n  return axios.patch(url).catch(err => {\n    throw err;\n  });\n}\n"]}]}